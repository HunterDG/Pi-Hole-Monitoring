version: '3'

services:

  sql_influx:
    container_name: sql_influx
    build: ./sql_influx
    command: python main.py
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - influxdb
    networks:
      - influxdb
    volumes:
      - etc-pihole:/etc/pihole:ro
    restart: unless-stopped

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    depends_on:
      - influxdb
    networks:
      - influxdb
    volumes:
      - ./telegraf:/etc/telegraf
    restart: unless-stopped
    extra_hosts:
      - pi.hole:${ipAddr}

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    networks:
      influxdb:
    volumes:
      - influxdb-storage:/var/lib/influxdb
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - influxdb
    ports:
      - 3000:3000
    networks:
      - influxdb
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped

  pihole:
      container_name: pihole
      ports:
          - '53:53/tcp'
          - '53:53/udp'
          - '80:80'
          - '443:443'
      environment:
          - TZ=America/Chicago
          - WEBPASSWORD=${webPassword}
          - ServerIP=${ipAddr}
          - DNS1=${dns1}
          - DNS2=${dns2}
          - CONDITIONAL_FORWARDING=True
          - CONDITIONAL_FORWARDING_IP=${fwdIp}
          - CONDITIONAL_FORWARDING_DOMAIN=${fwdDomain}
      volumes:
          - 'etc-pihole:/etc/pihole'
          - 'etc-dnsmasq.d/:/etc/dnsmasq.d'
      dns:
          - 127.0.0.1
          - 1.1.1.1
      restart: unless-stopped
      image: 'pihole/pihole:latest'

volumes:
  grafana-storage:
  influxdb-storage:
  etc-pihole:
  etc-dnsmasq.d:

networks:
  influxdb:
